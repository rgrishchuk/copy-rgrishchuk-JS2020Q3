/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _puzzle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./puzzle */ \"./src/js/puzzle.js\");\n/* harmony import */ var _menu_menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./menu/menu */ \"./src/js/menu/menu.js\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./storage */ \"./src/js/storage.js\");\n\r\n\r\n\r\n// import solvePuzzle from './solve/solve';\r\n\r\nlet audio = document.createElement('audio');\r\naudio.src = './assets/sound/move3.mp3';\r\naudio.classList.add('audio__move');\r\ndocument.body.prepend(audio);\r\naudio = document.createElement('audio');\r\naudio.src = './assets/sound/win1.mp3';\r\naudio.classList.add('audio__win');\r\ndocument.body.prepend(audio);\r\n\r\nconst menu = new _menu_menu__WEBPACK_IMPORTED_MODULE_1__.default(400);\r\ndocument.body.prepend(menu.element);\r\n\r\nlet gameSettings = (0,_storage__WEBPACK_IMPORTED_MODULE_2__.getLocal)('puzzleSettings');\r\nif (!gameSettings) {\r\n  gameSettings = {\r\n    numbers: 16,\r\n    type: 'num',\r\n    sound: true,\r\n  };\r\n}\r\nconst gemPuzzle = new _puzzle__WEBPACK_IMPORTED_MODULE_0__.default(400, gameSettings.numbers, gameSettings.type, gameSettings.sound);\r\ngemPuzzle.generateCells();\r\ngemPuzzle.draw();\r\n\r\nfunction viewSolve(moves) {\r\n  gemPuzzle.isShowSolve = true;\r\n  gemPuzzle.timer.start();\r\n  for (let index = 0; index < moves.length; index += 1) {\r\n    setTimeout(() => {gemPuzzle.move(moves[index])}, index * 1000);\r\n  }\r\n  gemPuzzle.isPaused = false;\r\n}\r\n\r\nfunction pause() {\r\n  if (gemPuzzle.isPaused) {\r\n    gemPuzzle.overlayOff();\r\n    gemPuzzle.start();\r\n    menu.setTitle('pause', 'PAUSE GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">pause_circle_outline</i>');\r\n  } else {\r\n    gemPuzzle.pause();\r\n    gemPuzzle.overlayOn();\r\n    const info = document.createElement('div');\r\n    info.classList.add('pause');\r\n    const infoTitle = document.createElement('span');\r\n    infoTitle.classList.add('pause__title');\r\n    infoTitle.innerHTML = 'GAME PAUSED';\r\n    info.appendChild(infoTitle);\r\n    if (gemPuzzle.numbers <= 16) {\r\n      const solveInfo = document.createElement('span');\r\n      solveInfo.classList.add('pause__solve-info');\r\n      solveInfo.innerHTML = 'To automatically solve the puzzle, click the button below';\r\n      info.appendChild(solveInfo);\r\n      const solveButton = document.createElement('span');\r\n      solveButton.classList.add('pause__solve-button');\r\n      solveButton.innerHTML = '<i class=\"material-icons-outlined\">memory</i>';\r\n      info.appendChild(solveButton);\r\n      solveButton.addEventListener('click', function handler() {\r\n        menu.disableAll();\r\n        solveButton.removeEventListener('click', handler, false);\r\n        solveInfo.innerHTML = 'Calculation in progress, please wait';\r\n        solveButton.classList.add('animate');\r\n        const worker = new Worker('./src/js/solve/test.js');\r\n        const game = { cells: [], empty: { left: gemPuzzle.empty.left, top: gemPuzzle.empty.top } };\r\n        gemPuzzle.cells.forEach((cell) => {\r\n          const cellNew = {\r\n            value: cell.value,\r\n            left: cell.left,\r\n            top: cell.top,\r\n          };\r\n          game.cells.push(cellNew);\r\n        });\r\n        const start = new Date().getTime();\r\n        worker.postMessage(game);\r\n        worker.onmessage = (e) => {\r\n          menu.activeAll();\r\n          solveButton.classList.remove('animate');\r\n          const stop = new Date().getTime();\r\n          if (e.data && e.data.length > 0) {\r\n            solveInfo.innerHTML = `Operation took ${stop - start} ms.<br>Press play for view result`;\r\n            solveButton.innerHTML = '<i class=\"material-icons-outlined\">play_arrow</i>';\r\n          } else {\r\n            solveInfo.innerHTML = 'Sorry, no solution found';\r\n          }\r\n          console.log(gemPuzzle);\r\n          console.log(e.data);\r\n          worker.terminate();\r\n          solveButton.addEventListener('click', () => {\r\n            menu.disableAll();\r\n            solveButton.removeEventListener('click', handler, false);\r\n            gemPuzzle.overlayOff();\r\n            viewSolve(e.data);\r\n          });\r\n        };\r\n      });\r\n    }\r\n    gemPuzzle.display(info);\r\n    menu.setTitle('pause', 'RESUME GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">play_circle_outline</i>');\r\n  }\r\n}\r\n\r\nfunction saveSettings() {\r\n  const size = parseInt(document.querySelector('#size').value, 10);\r\n  let type = 'img';\r\n  if (document.querySelector('#num').checked) { type = 'num'; }\r\n  const sound = document.querySelector('.settings__sound').classList.contains('ON');\r\n  gemPuzzle.setSettings(size, type, sound);\r\n  // gemPuzzle.setSound(sound);\r\n  (0,_storage__WEBPACK_IMPORTED_MODULE_2__.setLocal)('puzzleSettings', gemPuzzle.settings);\r\n  const inf = document.querySelector('.settings__info');\r\n  inf.textContent = 'Settings applied';\r\n  inf.classList.add('active');\r\n}\r\n\r\nfunction createSettingsForm() {\r\n  const settingsHTML = document.createElement('div');\r\n  settingsHTML.classList.add('settings');\r\n  settingsHTML.innerHTML = '<span class=\"settings__title\">SETTINGS</span>';\r\n\r\n  const sizeHTML = document.createElement('div');\r\n  sizeHTML.classList.add('settings__size');\r\n  sizeHTML.innerHTML = '<span class=\"settings__size__title\">Size</span>';\r\n  const sizeSelect = document.createElement('select');\r\n  sizeSelect.id = 'size';\r\n  sizeSelect.classList.add('clickable');\r\n  const sizeArr = [\r\n    { size: '3x3', val: 9 }, { size: '4x4', val: 16 },\r\n    { size: '5x5', val: 25 }, { size: '6x6', val: 36 },\r\n    { size: '7x7', val: 49 }, { size: '8x8', val: 64 },\r\n  ];\r\n  sizeArr.forEach((item) => {\r\n    const option = document.createElement('option');\r\n    option.value = item.val;\r\n    option.text = item.size;\r\n    sizeSelect.appendChild(option);\r\n  });\r\n  sizeSelect.value = gemPuzzle.settings.numbers;\r\n  sizeHTML.appendChild(sizeSelect);\r\n  settingsHTML.appendChild(sizeHTML);\r\n\r\n  const typeHTML = document.createElement('div');\r\n  typeHTML.classList.add('settings__type');\r\n  typeHTML.innerHTML = '<span class=\"settings__type__title\">Type</span>';\r\n  let radio = document.createElement('input');\r\n  radio.classList.add('clickable');\r\n  radio.type = 'radio';\r\n  radio.name = 'type';\r\n  radio.id = 'num';\r\n  radio.value = 'num';\r\n  typeHTML.appendChild(radio);\r\n  let label = document.createElement('label');\r\n  label.htmlFor = 'num';\r\n  let description = document.createTextNode('numbers');\r\n  label.appendChild(description);\r\n  if (gemPuzzle.settings.type === 'num') { radio.checked = true; }\r\n  typeHTML.appendChild(label);\r\n  radio = document.createElement('input');\r\n  radio.classList.add('clickable');\r\n  radio.type = 'radio';\r\n  radio.name = 'type';\r\n  radio.id = 'img';\r\n  radio.value = 'img';\r\n  if (gemPuzzle.settings.type === 'img') { radio.checked = true; }\r\n  typeHTML.appendChild(radio);\r\n  label = document.createElement('label');\r\n  label.htmlFor = 'img';\r\n  description = document.createTextNode('image');\r\n  label.appendChild(description);\r\n  typeHTML.appendChild(label);\r\n  settingsHTML.appendChild(typeHTML);\r\n\r\n  const soundSettings = document.createElement('span');\r\n  soundSettings.classList.add('settings__sound');\r\n  if (gemPuzzle.settings.sound) {\r\n    soundSettings.innerHTML = '<i class=\"material-icons\">volume_up</i>';\r\n    soundSettings.classList.add('ON');\r\n  } else {\r\n    soundSettings.innerHTML = '<i class=\"material-icons\">volume_off</i>';\r\n    soundSettings.classList.remove('ON');\r\n  }\r\n  settingsHTML.appendChild(soundSettings);\r\n  soundSettings.addEventListener('click', () => {\r\n    document.querySelector('.settings__info').classList.remove('active');\r\n    if (soundSettings.classList.contains('ON')) {\r\n      soundSettings.innerHTML = '<i class=\"material-icons\">volume_off</i>';\r\n      soundSettings.classList.remove('ON');\r\n    } else {\r\n      soundSettings.innerHTML = '<i class=\"material-icons\">volume_up</i>';\r\n      soundSettings.classList.add('ON');\r\n    }\r\n  });\r\n\r\n  const applySettings = document.createElement('button');\r\n  applySettings.id = 'apply_settings';\r\n  applySettings.innerHTML = 'Apply';\r\n  settingsHTML.appendChild(applySettings);\r\n\r\n  const info = document.createElement('p');\r\n  info.classList.add('settings__info');\r\n  info.textContent = 'INF';\r\n  settingsHTML.appendChild(info);\r\n\r\n  applySettings.addEventListener('click', saveSettings);\r\n\r\n  return settingsHTML;\r\n}\r\n\r\nfunction settings() {\r\n  if (!gemPuzzle.isPaused) {\r\n    gemPuzzle.pause();\r\n    gemPuzzle.overlayOn();\r\n    menu.setTitle('pause', 'RESUME GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">play_circle_outline</i>');\r\n  }\r\n  gemPuzzle.clearOverlay();\r\n  const settingsForm = createSettingsForm();\r\n  gemPuzzle.display(settingsForm);\r\n  document.querySelectorAll('.clickable').forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      document.querySelector('.settings__info').classList.remove('active');\r\n    });\r\n  });\r\n}\r\n\r\nfunction newGame() {\r\n  if (gemPuzzle.isPaused) {\r\n    menu.setTitle('pause', 'PAUSE GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">pause_circle_outline</i>');\r\n  }\r\n  gemPuzzle.overlayOff();\r\n  gemPuzzle.newGame();\r\n  gemPuzzle.generateCells();\r\n  gemPuzzle.draw();\r\n  menu.activeItem('pause');\r\n  menu.activeItem('save');\r\n}\r\n\r\nfunction win() {\r\n  menu.disableItem('pause');\r\n  menu.disableItem('save');\r\n  if (gemPuzzle.type === 'img') {\r\n    gemPuzzle.showImage();\r\n  }\r\n  if (gemPuzzle.settings.sound) {\r\n    const music = document.querySelector('.audio__win');\r\n    if (music !== null) {\r\n      music.currentTime = 0;\r\n      music.play();\r\n    }\r\n  }\r\n  \r\n  let min = `${gemPuzzle.timer.min}`;\r\n  let sec = `${gemPuzzle.timer.sec}`;\r\n  if (min.length === 1) { min = `0${min}`; }\r\n  if (sec.length === 1) { sec = `0${sec}`; }\r\n  \r\n  const marquee = document.createElement('span');\r\n  marquee.classList.add('win');\r\n  marquee.textContent = `Hooray! You solved the puzzle in ${min}:${sec} and ${gemPuzzle.moves} moves`;\r\n  gemPuzzle.overlayOn(0.2);\r\n  gemPuzzle.display(marquee);\r\n  \r\n  if (gemPuzzle.isShowSolve) {\r\n    menu.activeItem('newgame');\r\n    menu.activeItem('load');\r\n    menu.activeItem('top');\r\n    menu.activeItem('settings');\r\n    gemPuzzle.isShowSolve = false;\r\n    return; \r\n  };\r\n  \r\n  const dateNow = new Date().toLocaleString('en', {\r\n    day: 'numeric',\r\n    month: 'short',\r\n    year: 'numeric',\r\n  });\r\n  const num = Math.sqrt(gemPuzzle.numbers);\r\n  const winner = {\r\n    date: dateNow,\r\n    moves: gemPuzzle.moves,\r\n    size: `${num}x${num}`,\r\n    type: gemPuzzle.type,\r\n    time: `${min}:${sec}`,\r\n  };\r\n  let winners = (0,_storage__WEBPACK_IMPORTED_MODULE_2__.getLocal)('winners');\r\n  if (!winners) {\r\n    winners = [];\r\n  }\r\n  winners.push(winner);\r\n  if (winners.length > 10) {\r\n    winners.sort((a, b) => a.moves - b.moves);\r\n    winners.length = 10;\r\n  }\r\n  (0,_storage__WEBPACK_IMPORTED_MODULE_2__.setLocal)('winners', winners);\r\n}\r\n\r\nfunction createTopScoreHTML() {\r\n  const topScoreHTML = document.createElement('div');\r\n  topScoreHTML.classList.add('topScore');\r\n  topScoreHTML.innerHTML = '<span class=\"topScore__title\">TOP SCORES</span>';\r\n  const tableTop = document.createElement('table');\r\n  tableTop.classList.add('topScore__table');\r\n  let tr = document.createElement('tr');\r\n  const thead = ['Date', 'Moves', 'Size', 'Type', 'Time'];\r\n  thead.forEach((item) => {\r\n    const th = document.createElement('th');\r\n    th.innerHTML = item;\r\n    tr.appendChild(th);\r\n  });\r\n  tableTop.appendChild(tr);\r\n  const winners = (0,_storage__WEBPACK_IMPORTED_MODULE_2__.getLocal)('winners');\r\n  if (winners) {\r\n    winners.sort((a, b) => a.moves - b.moves);\r\n    winners.forEach((item) => {\r\n      tr = document.createElement('tr');\r\n      tr.innerHTML = `<td>${item.date}</td><td>${item.moves}</td><td>${item.size}</td><td>${item.type}</td><td>${item.time}</td>`;\r\n      tableTop.appendChild(tr);\r\n    });\r\n  }\r\n  topScoreHTML.appendChild(tableTop);\r\n  return topScoreHTML;\r\n}\r\n\r\nfunction topScore() {\r\n  if (!gemPuzzle.isPaused) {\r\n    gemPuzzle.pause();\r\n    gemPuzzle.overlayOn();\r\n    menu.setTitle('pause', 'RESUME GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">play_circle_outline</i>');\r\n  }\r\n  gemPuzzle.clearOverlay();\r\n  gemPuzzle.display(createTopScoreHTML());\r\n}\r\n\r\nfunction save() {\r\n  if (!gemPuzzle.isPaused) {\r\n    gemPuzzle.pause();\r\n    gemPuzzle.overlayOn();\r\n    menu.setTitle('pause', 'RESUME GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">play_circle_outline</i>');\r\n  }\r\n  gemPuzzle.clearOverlay();\r\n  let srcImage = '';\r\n  if (gemPuzzle.img) srcImage = gemPuzzle.img.src;\r\n  const today = new Date().getTime();\r\n  const data = {\r\n    date: today,\r\n    cells: gemPuzzle.cells,\r\n    empty: gemPuzzle.empty,\r\n    moves: gemPuzzle.moves,\r\n    timer: { min: gemPuzzle.timer.min, sec: gemPuzzle.timer.sec },\r\n    type: gemPuzzle.type,\r\n    img: srcImage,\r\n    numbers: gemPuzzle.numbers,\r\n  };\r\n  let saveData = (0,_storage__WEBPACK_IMPORTED_MODULE_2__.getLocal)('puzzleSave');\r\n  if (!saveData) { saveData = []; }\r\n  saveData.push(data);\r\n  (0,_storage__WEBPACK_IMPORTED_MODULE_2__.setLocal)('puzzleSave', saveData);\r\n  const text = document.createElement('span');\r\n  text.innerHTML = 'Game saved';\r\n  text.classList.add('save__info');\r\n  gemPuzzle.display(text);\r\n}\r\n\r\nfunction addZero(item) {\r\n  let result = item.toString();\r\n  if (result.length === 1) {\r\n    result = `0${result}`;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction createPreview(cells, size, type, img) {\r\n  const miniBox = document.createElement('div');\r\n  miniBox.classList.add('miniBox');\r\n  miniBox.style.height = `${size}px`;\r\n  miniBox.style.width = `${size}px`;\r\n  const cellSize = (size / Math.sqrt(cells.length));\r\n  cells.forEach((cell) => {\r\n    if (cell.value !== 0) {\r\n      const cellElement = document.createElement('div');\r\n      cellElement.classList.add('miniCell');\r\n      cellElement.style.height = `${cellSize}px`;\r\n      cellElement.style.width = `${cellSize}px`;\r\n      cellElement.style.left = `${cell.left * cellSize}px`;\r\n      cellElement.style.top = `${cell.top * cellSize}px`;\r\n      if (type === 'num') { \r\n        cellElement.classList.add('number');\r\n        cellElement.innerHTML = cell.value; \r\n      } else {\r\n        const cellsInRow = Math.sqrt(cells.length);\r\n        const left = (cell.value - 1) % cellsInRow;\r\n        const top = (cell.value - 1 - left) / cellsInRow;\r\n        const fragmentSize = size / Math.sqrt(cells.length);\r\n        const imgTop = 0 - top * fragmentSize;\r\n        const imgLeft = 0 - left * fragmentSize;\r\n        cellElement.style.backgroundSize = `${size}px ${size}px`;\r\n        cellElement.style.backgroundPosition = `${imgLeft}px ${imgTop}px`;\r\n        cellElement.style.backgroundImage = `url('${img}')`;\r\n      }\r\n      miniBox.appendChild(cellElement);\r\n    }\r\n  });\r\n  return miniBox;\r\n}\r\n\r\nfunction createSlider(data) {\r\n  data.sort((a, b) => b.date - a.date);\r\n  const slider = document.createElement('div');\r\n  slider.classList.add('slider');\r\n  const sliderTitle = document.createElement('span');\r\n  sliderTitle.classList.add('slider__title');\r\n  slider.appendChild(sliderTitle);\r\n\r\n  const wrapper = document.createElement('div');\r\n  wrapper.classList.add('slider__wrapper');\r\n  slider.appendChild(wrapper);\r\n  const sliderLeft = document.createElement('span');\r\n  sliderLeft.classList.add('slider__left');\r\n  sliderLeft.innerHTML = '<i class=\"material-icons-outlined\">keyboard_arrow_left</i>';\r\n  const sliderRight = document.createElement('span');\r\n  sliderRight.classList.add('slider__right');\r\n  sliderRight.innerHTML = '<i class=\"material-icons-outlined\">keyboard_arrow_right</i>';\r\n\r\n  const sliderPreview = document.createElement('div');\r\n  sliderPreview.classList.add('slider__preview');\r\n  const sliderInfo = document.createElement('div');\r\n  sliderInfo.classList.add('slider__info');\r\n  const infoSize = document.createElement('span');\r\n  infoSize.classList.add('slider__info__size');\r\n  const infoMove = document.createElement('span');\r\n  infoMove.classList.add('slider__info__move');\r\n  const infoTime = document.createElement('span');\r\n  infoTime.classList.add('slider__info__time');\r\n  sliderInfo.appendChild(infoSize);\r\n  sliderInfo.appendChild(infoMove);\r\n  sliderInfo.appendChild(infoTime);\r\n\r\n  wrapper.appendChild(sliderLeft);\r\n  wrapper.appendChild(sliderPreview);\r\n  wrapper.appendChild(sliderInfo);\r\n  wrapper.appendChild(sliderRight);\r\n\r\n  const loadButton = document.createElement('button');\r\n  loadButton.id = 'slider__load';\r\n  loadButton.innerHTML = 'Load';\r\n  slider.appendChild(loadButton);\r\n\r\n  function changeSlide(i) {\r\n    sliderTitle.innerHTML = new Date(data[i].date).toLocaleString('en', {\r\n      day: 'numeric',\r\n      month: 'short',\r\n      year: 'numeric',\r\n      hour12: false,\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    });\r\n    infoSize.innerHTML = `Size: ${Math.sqrt(data[i].numbers)}x${Math.sqrt(data[i].numbers)}`;\r\n    infoMove.innerHTML = `Moves: ${data[i].moves}`;\r\n    infoTime.innerHTML = `Time: ${addZero(data[i].timer.min)}:${addZero(data[i].timer.sec)}`;\r\n    const prevSlide = document.querySelector('.miniBox');\r\n    if (prevSlide) { sliderPreview.removeChild(prevSlide); }\r\n\r\n    sliderPreview.appendChild(createPreview(data[i].cells, 150, data[i].type, data[i].img));\r\n  }\r\n\r\n  changeSlide(0);\r\n  let index = 0;\r\n  if (data.length > 1) {\r\n    sliderRight.classList.add('active');\r\n\r\n    sliderRight.addEventListener('click', () => {\r\n      if (sliderRight.classList.contains('active')) {\r\n        index += 1;\r\n        if (index === (data.length - 1)) {\r\n          sliderRight.classList.remove('active');\r\n        }\r\n        if (index > 0) {\r\n          sliderLeft.classList.add('active');\r\n        }\r\n        changeSlide(index);\r\n      }\r\n    });\r\n\r\n    sliderLeft.addEventListener('click', () => {\r\n      if (sliderLeft.classList.contains('active')) {\r\n        index -= 1;\r\n        if (index === 0) {\r\n          sliderLeft.classList.remove('active');\r\n        }\r\n        if (index < (data.length - 1)) {\r\n          sliderRight.classList.add('active');\r\n        }\r\n        changeSlide(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadButton.addEventListener('click', () => {\r\n    gemPuzzle.loadGame(data[index]);\r\n    gemPuzzle.overlayOff();\r\n    gemPuzzle.draw(true);\r\n    menu.activeItem('pause');\r\n    menu.activeItem('save');\r\n  });\r\n  return slider;\r\n}\r\n\r\nfunction load() {\r\n  if (!gemPuzzle.isPaused) {\r\n    gemPuzzle.pause();\r\n    gemPuzzle.overlayOn();\r\n    menu.setTitle('pause', 'RESUME GAME');\r\n    menu.setValue('pause', '<i class=\"material-icons-outlined\">play_circle_outline</i>');\r\n  }\r\n  gemPuzzle.clearOverlay();\r\n  const loadedData = (0,_storage__WEBPACK_IMPORTED_MODULE_2__.getLocal)('puzzleSave');\r\n  let content = null;\r\n  if (loadedData) {\r\n    content = createSlider(loadedData);\r\n  } else {\r\n    content = document.createElement('span');\r\n    content.classList.add('load__info');\r\n    content.innerHTML = 'Empty. No saved games';\r\n  }\r\n  gemPuzzle.display(content);\r\n}\r\n\r\nmenu.newgame.addEventListener('click', () => {\r\n  if (menu.isActive('newgame')) newGame();\r\n});\r\nmenu.pause.addEventListener('click', () => {\r\n  if (menu.isActive('pause')) pause();\r\n});\r\nmenu.save.addEventListener('click', () => {\r\n  if (menu.isActive('save')) save();\r\n});\r\nmenu.load.addEventListener('click', () => {\r\n  if (menu.isActive('load')) load();\r\n});\r\nmenu.top.addEventListener('click', () => {\r\n  if (menu.isActive('top')) topScore();\r\n});\r\nmenu.settings.addEventListener('click', () => {\r\n  if (menu.isActive('settings')) settings();\r\n});\r\n\r\ndocument.addEventListener('win', win);\n\n//# sourceURL=webpack://gem-puzzle/./src/js/index.js?");

/***/ }),

/***/ "./src/js/menu/menu.js":
/*!*****************************!*\
  !*** ./src/js/menu/menu.js ***!
  \*****************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Menu\n/* harmony export */ });\n/* harmony import */ var _mn_items__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mn_items */ \"./src/js/menu/mn_items.js\");\n\r\n\r\nclass Menu {\r\n  constructor(width) {\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('menu');\r\n    this.element.style.width = `${width}px`;\r\n    const ul = document.createElement('ul');\r\n    ul.classList.add('menu__list');\r\n    _mn_items__WEBPACK_IMPORTED_MODULE_0__.default.forEach((item) => {\r\n      const li = document.createElement('li');\r\n      li.classList.add('menu__list__item', 'active');\r\n      li.innerHTML = item.value;\r\n      li.title = item.title;\r\n      ul.appendChild(li);\r\n      this[item.name] = li;\r\n    });\r\n    this.element.appendChild(ul);\r\n  }\r\n\r\n  setValue(item, value) {\r\n    this[item].innerHTML = value;\r\n  }\r\n\r\n  setTitle(item, title) {\r\n    this[item].title = title;\r\n  }\r\n\r\n  activeItem(item) {\r\n    this[item].classList.add('active');\r\n  }\r\n\r\n  disableItem(item) {\r\n    this[item].classList.remove('active');\r\n  }\r\n\r\n  disableAll() {\r\n    for (const item in this) {\r\n      if (this.hasOwnProperty(item) && item != 'element') {\r\n        this.disableItem(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  activeAll() {\r\n    for (const item in this) {\r\n      if (this.hasOwnProperty(item) && item != 'element') {\r\n        this.activeItem(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  isActive(item) {\r\n    return this[item].classList.contains('active');\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://gem-puzzle/./src/js/menu/menu.js?");

/***/ }),

/***/ "./src/js/menu/mn_items.js":
/*!*********************************!*\
  !*** ./src/js/menu/mn_items.js ***!
  \*********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nconst menuItems = [\r\n  {\r\n    name: 'newgame',\r\n    value: '<i class=\"material-icons-outlined\">refresh</i>',\r\n    title: 'NEW GAME',\r\n  },\r\n  {\r\n    name: 'save',\r\n    value: '<i class=\"material-icons-outlined\">save</i>',\r\n    title: 'SAVE GAME',\r\n  },\r\n  {\r\n    name: 'load',\r\n    value: '<i class=\"material-icons-outlined\">upgrade</i>',\r\n    title: 'LOAD GAME',\r\n  },\r\n  {\r\n    name: 'pause',\r\n    value: '<i class=\"material-icons-outlined\">pause_circle_outline</i>',\r\n    title: 'PAUSE GAME',\r\n  },\r\n  {\r\n    name: 'top',\r\n    value: '<i class=\"material-icons-outlined\">star_rate</i>',\r\n    title: 'TOP SCORE',\r\n  },\r\n  {\r\n    name: 'settings',\r\n    value: '<i class=\"material-icons-outlined\">settings</i>',\r\n    title: 'SETTINGS',\r\n  },\r\n];\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (menuItems);\r\n\n\n//# sourceURL=webpack://gem-puzzle/./src/js/menu/mn_items.js?");

/***/ }),

/***/ "./src/js/puzzle.js":
/*!**************************!*\
  !*** ./src/js/puzzle.js ***!
  \**************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ GemPuzzle\n/* harmony export */ });\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer */ \"./src/js/timer.js\");\n/* harmony import */ var _statbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./statbar */ \"./src/js/statbar.js\");\n\r\n\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable object-shorthand */\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nclass GemPuzzle {\r\n  constructor(size, numbers, type = 'num', sound) {\r\n    this.size = size;\r\n    this.cellSize = Math.round(this.size / Math.sqrt(numbers));\r\n    // this.cellSize = this.size / Math.sqrt(numbers);\r\n    this.numbers = numbers;\r\n    this.moves = 0;\r\n    this.type = type;\r\n    this.statusbar = new _statbar__WEBPACK_IMPORTED_MODULE_1__.default(size);\r\n    this.timer = new _timer__WEBPACK_IMPORTED_MODULE_0__.default(this.statusbar);\r\n    this.statusbar.setTimer(this.timer);\r\n    this.statusbar.setMoves(this.moves);\r\n    this.isEnableEvent = true;\r\n    this.isPaused = false;\r\n    this.isShowSolve = false;\r\n    if (this.type === 'img') {\r\n      this.img = new Image();\r\n      this.img.src = `assets/images/${getRandomIntInclusive(1, 150)}.jpg`;\r\n      // this.img.src = 'assets/images/33.jpg';\r\n      console.log(this.img);\r\n    }\r\n    this.setSettings(this.numbers, this.type, sound);\r\n  }\r\n\r\n  showImage() {\r\n    document.querySelectorAll('.cell').forEach((cell) => {\r\n      cell.parentNode.removeChild(cell);\r\n    });\r\n    const gameBox = document.querySelector('.box');\r\n    gameBox.style.backgroundSize = `${this.size}px ${this.size}px`;\r\n    gameBox.style.backgroundImage = `url('${this.img.src}')`;\r\n  }\r\n\r\n  newGame() {\r\n    this.timer.stop();\r\n    this.timer.clear();\r\n    this.moves = 0;\r\n    this.statusbar.setMoves(this.moves);\r\n    this.statusbar.setTimer(this.timer);\r\n    this.numbers = this.settings.numbers;\r\n    this.cellSize = Math.round(this.size / Math.sqrt(this.numbers));\r\n    this.type = this.settings.type;\r\n    this.isEnableEvent = true;\r\n    this.isPaused = false;\r\n    this.isShowSolve = false;\r\n    const gameBox = document.querySelector('.box');\r\n    gameBox.style.backgroundSize = '';\r\n    gameBox.style.backgroundImage = '';\r\n    if (this.type === 'img') {\r\n      this.img = new Image();\r\n      this.img.src = `assets/images/${getRandomIntInclusive(1, 150)}.jpg`;\r\n    }\r\n  }\r\n\r\n  loadGame(data) {\r\n    // console.log(data);\r\n    this.moves = data.moves;\r\n    this.timer.clear();\r\n    this.timer.setTime(data.timer.min, data.timer.sec);\r\n    this.statusbar.setMoves(this.moves);\r\n    this.statusbar.setTimer(this.timer);\r\n    this.isEnableEvent = true;\r\n    this.isPaused = false;\r\n    this.isShowSolve = false;\r\n    this.type = data.type;\r\n    this.numbers = data.cells.length;\r\n    this.cellSize = Math.round(this.size / Math.sqrt(this.numbers));\r\n    const gameBox = document.querySelector('.box');\r\n    gameBox.style.backgroundSize = '';\r\n    gameBox.style.backgroundImage = '';\r\n    if (this.type === 'img') {\r\n      this.img = new Image();\r\n      this.img.src = data.img;\r\n    }\r\n    this.cells = data.cells;\r\n    this.empty.left = data.empty.left;\r\n    this.empty.top = data.empty.top;\r\n  }\r\n\r\n  setSettings(numbers, type, sound) {\r\n    this.settings = {\r\n      numbers: numbers,\r\n      type: type,\r\n      sound: sound,\r\n    };\r\n  }\r\n\r\n  move(index) {\r\n    const cell = this.cells[index];\r\n    if (Math.abs(cell.top - this.empty.top) + Math.abs(cell.left - this.empty.left) > 1) {\r\n      // cell.element.style.left = `${cell.left * this.cellSize}px`;\r\n      // cell.element.style.top = `${cell.top * this.cellSize}px`;\r\n      return;\r\n    }\r\n    if (this.settings.sound) {\r\n      const audio = document.querySelector('.audio__move');\r\n      if (audio !== null) {\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n      }\r\n    }\r\n    const currLeft = cell.left;\r\n    const currTop = cell.top;\r\n    cell.left = this.empty.left;\r\n    cell.top = this.empty.top;\r\n    cell.element.style.left = `${cell.left * this.cellSize}px`;\r\n    cell.element.style.top = `${cell.top * this.cellSize}px`;\r\n    this.empty.left = currLeft;\r\n    this.empty.top = currTop;\r\n    this.empty.element.style.left = `${this.empty.left * this.cellSize}px`;\r\n    this.empty.element.style.top = `${this.empty.top * this.cellSize}px`;\r\n    this.moves += 1;\r\n    this.statusbar.setMoves(this.moves);\r\n  }\r\n\r\n  generateCells() {\r\n    let numbers = [...Array(this.numbers).keys()]\r\n      .map((item) => item);\r\n    numbers = numbers.slice(1).concat(0);\r\n    let emptyIndex = null;\r\n    let emptyLeft = null;\r\n    let emptyTop = null;\r\n    let nearIndex = null;\r\n    const near = [];\r\n    const cellsInRow = Math.sqrt(this.numbers);\r\n    // const rows = this.numbers / cellsInRow;\r\n    const rows = cellsInRow;\r\n    // console.log(`${rows} - ${cellsInRow}`);\r\n    // for (let i = 0; i < 100 * cellsInRow; i += 1) {\r\n    let shuffle = 50;\r\n    if (this.numbers > 16) shuffle = shuffle * this.numbers;\r\n    for (let i = 0; i < shuffle; i += 1) {\r\n      near.length = 0;\r\n      emptyIndex = numbers.indexOf(0);\r\n      emptyLeft = (emptyIndex) % cellsInRow;\r\n      emptyTop = (emptyIndex - emptyLeft) / cellsInRow;\r\n      if (emptyTop !== 0) {\r\n        near.push(emptyIndex - cellsInRow);\r\n      }\r\n      if (emptyLeft !== 0) {\r\n        near.push(emptyIndex - 1);\r\n      }\r\n      if (emptyTop !== rows - 1) {\r\n        near.push(emptyIndex + cellsInRow);\r\n      }\r\n      if (emptyLeft !== cellsInRow - 1) {\r\n        near.push(emptyIndex + 1);\r\n      }\r\n      nearIndex = near[getRandomIntInclusive(0, near.length - 1)];\r\n      numbers[emptyIndex] = numbers[nearIndex];\r\n      numbers[nearIndex] = 0;\r\n    }\r\n    // numbers = [8, 6, 7, 2, 5, 4, 3, 0, 1];\r\n    // numbers = [0, 2, 3, 7, 5, 6, 1, 4, 8];\r\n    this.cells = [];\r\n    numbers.forEach((num) => this.cells.push({ value: num }));\r\n  }\r\n\r\n  draw(redraw = false) {\r\n    let gameBox = document.querySelector('.box');\r\n    if (gameBox == null) {\r\n      gameBox = document.createElement('div');\r\n      gameBox.classList.add('box');\r\n      // gameBox.style.height = `${this.size}px`;\r\n      // gameBox.style.width = `${this.size}px`;\r\n      \r\n      gameBox.style.height = `${this.cellSize * Math.sqrt(this.numbers)}px`;\r\n      gameBox.style.width = `${this.cellSize * Math.sqrt(this.numbers)}px`;\r\n      this.overlay = document.createElement('div');\r\n      this.overlay.classList.add('overlay');\r\n      gameBox.appendChild(this.overlay);\r\n      document.body.prepend(gameBox);\r\n      document.body.prepend(this.statusbar.element);\r\n    } else {\r\n      gameBox.style.height = `${this.cellSize * Math.sqrt(this.numbers)}px`;\r\n      gameBox.style.width = `${this.cellSize * Math.sqrt(this.numbers)}px`;\r\n      document.querySelectorAll('.cell').forEach((cell) => {\r\n        cell.parentNode.removeChild(cell);\r\n      });\r\n    }\r\n    const cellsInRow = Math.sqrt(this.numbers);\r\n    this.cells.forEach((cell, index) => {\r\n      let left = null;\r\n      let top = null;\r\n      if (redraw) {\r\n        if (cell.value === 0) {\r\n          left = this.empty.left;\r\n          top = this.empty.top;\r\n        } else {\r\n          left = cell.left;\r\n          top = cell.top;\r\n        }\r\n      } else {\r\n        left = (index) % cellsInRow;\r\n        top = (index - left) / cellsInRow;\r\n      }\r\n      const cellElement = document.createElement('div');\r\n      cellElement.classList.add('cell');\r\n      cellElement.style.height = `${this.cellSize}px`;\r\n      cellElement.style.width = `${this.cellSize}px`;\r\n      cellElement.style.left = `${left * this.cellSize}px`;\r\n      cellElement.style.top = `${top * this.cellSize}px`;\r\n      if (cell.value === 0) {\r\n        cellElement.classList.add('empty');\r\n        gameBox.appendChild(cellElement);\r\n        if (redraw) {\r\n          this.empty.element = cellElement;\r\n        } else {\r\n          this.empty = {\r\n            left: left,\r\n            top: top,\r\n            element: cellElement,\r\n          };\r\n        }\r\n      } else {\r\n        cell.top = top;\r\n        cell.left = left;\r\n        cell.element = cellElement;\r\n        if (this.type === 'num') {\r\n          cellElement.classList.add('number'); \r\n          cellElement.innerHTML = cell.value; \r\n        } else { this.insertImg(cellElement, cell); }\r\n        gameBox.appendChild(cellElement);\r\n        this.addEventCell(cellElement, index);\r\n      }\r\n    });\r\n    this.timer.start();\r\n  }\r\n\r\n  addEventCell(cell, index) {\r\n    cell.addEventListener('transitionstart', () => {\r\n      this.isEnableEvent = false;\r\n    });\r\n\r\n    cell.addEventListener('transitionend', () => {\r\n      this.isEnableEvent = true;\r\n      if (this.isFinish()) {\r\n        this.timer.stop();\r\n        document.dispatchEvent(new Event('win', { bubbles: true }));\r\n      }\r\n    });\r\n\r\n    cell.addEventListener('mousedown', (event) => {\r\n      if (!this.isEnableEvent || this.isShowSolve) { return; }\r\n      const cellCopy = cell.cloneNode(true);\r\n      cellCopy.classList.add('copy');\r\n      document.body.appendChild(cellCopy);\r\n      let elemBelow = null;\r\n\r\n      const shiftX = event.clientX - cell.getBoundingClientRect().left;\r\n      const shiftY = event.clientY - cell.getBoundingClientRect().top;\r\n      const startLeft = `${event.pageX - shiftX}px`;\r\n      const startTop = `${event.pageY - shiftY}px`;\r\n      // cell.classList.add('hidden');\r\n\r\n      cellCopy.classList.add('not-animate');\r\n      cellCopy.style.zIndex = 1000;\r\n      // document.body.appendChild(cell);\r\n\r\n      function moveAt(pageX, pageY) {\r\n        cellCopy.style.left = `${pageX - shiftX}px`;\r\n        cellCopy.style.top = `${pageY - shiftY}px`;\r\n      }\r\n\r\n      function onMouseMove(event) {\r\n        moveAt(event.pageX, event.pageY);\r\n        cellCopy.classList.add('hidden');\r\n        elemBelow = document.elementFromPoint(event.clientX, event.clientY);\r\n        cellCopy.classList.remove('hidden');\r\n      }\r\n\r\n      cellCopy.ondragstart = () => false;\r\n      moveAt(event.pageX, event.pageY);\r\n      document.addEventListener('mousemove', onMouseMove);\r\n      cellCopy.onmouseup = () => {\r\n        document.removeEventListener('mousemove', onMouseMove);\r\n        cellCopy.onmouseup = null;\r\n        cellCopy.style.zIndex = 0;\r\n        cellCopy.classList.add('hidden');\r\n        cellCopy.parentNode.removeChild(cellCopy);\r\n        if (elemBelow && elemBelow.closest('.empty')) {\r\n          this.move(index);\r\n        } else if (Math.abs(parseFloat(cellCopy.style.left) - parseFloat(startLeft)) < 5\r\n            && Math.abs(parseFloat(cellCopy.style.top) - parseFloat(startTop)) < 5) {\r\n          this.move(index);\r\n        }\r\n        // else { this.isEnableEvent = true; }\r\n      };\r\n    });\r\n  }\r\n\r\n  insertImg(cellElement, cell) {\r\n    const cellsInRow = Math.sqrt(this.numbers);\r\n    const left = (cell.value - 1) % cellsInRow;\r\n    const top = (cell.value - 1 - left) / cellsInRow;\r\n    const fragmentSize = this.size / Math.sqrt(this.numbers);\r\n    const imgTop = 0 - top * fragmentSize;\r\n    const imgLeft = 0 - left * fragmentSize;\r\n    cellElement.style.backgroundSize = `${this.size}px ${this.size}px`;\r\n    cellElement.style.backgroundPosition = `${imgLeft}px ${imgTop}px`;\r\n    cellElement.style.backgroundImage = `url('${this.img.src}')`;\r\n  }\r\n\r\n  overlayOn(opacity = 0.8) {\r\n    if (this.overlay) {\r\n      this.overlay.classList.add('active');\r\n      this.overlay.style.background = `rgba(0, 0, 0, ${opacity})`;\r\n    }\r\n  }\r\n\r\n  overlayOff() {\r\n    if (this.overlay) {\r\n      this.clearOverlay();\r\n      this.overlay.classList.remove('active');\r\n      this.overlay.style.background = '';\r\n    }\r\n  }\r\n\r\n  clearOverlay() {\r\n    if (this.overlay) {\r\n      this.overlay.innerHTML = '';\r\n    }\r\n  }\r\n\r\n  display(element) {\r\n    // console.log(element);\r\n    if (this.overlay) this.overlay.appendChild(element);\r\n  }\r\n\r\n  pause() {\r\n    this.isPaused = true;\r\n    this.timer.stop();\r\n  }\r\n\r\n  start() {\r\n    this.isPaused = false;\r\n    this.timer.start();\r\n  }\r\n\r\n  isFinish() {\r\n    return this.cells.every((cell) => {\r\n      if (cell.value === 0) {\r\n        return true;\r\n      }\r\n      return cell.value === cell.top * Math.sqrt(this.numbers) + cell.left + 1;\r\n    });\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://gem-puzzle/./src/js/puzzle.js?");

/***/ }),

/***/ "./src/js/statbar.js":
/*!***************************!*\
  !*** ./src/js/statbar.js ***!
  \***************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ StatusBar\n/* harmony export */ });\nclass StatusBar {\r\n  constructor(width) {\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('statusbar');\r\n    this.setWidth(width);\r\n    // add timer\r\n    let el = document.createElement('div');\r\n    el.classList.add('timer');\r\n    let title = document.createElement('span');\r\n    title.classList.add('timer__title');\r\n    title.innerHTML = '<i class=\"material-icons\">timer</i>';\r\n    el.appendChild(title);\r\n    let value = document.createElement('span');\r\n    value.classList.add('timer__value');\r\n    this.timer = value;\r\n    el.appendChild(value);\r\n    this.element.appendChild(el);\r\n    // add moves\r\n    el = document.createElement('div');\r\n    el.classList.add('moves');\r\n    title = document.createElement('span');\r\n    title.classList.add('moves__title');\r\n    title.innerHTML = '<b>Moves:</b>';\r\n    el.appendChild(title);\r\n    value = document.createElement('span');\r\n    value.classList.add('moves__value');\r\n    this.moves = value;\r\n    el.appendChild(value);\r\n    this.element.appendChild(el);\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.element.style.width = `${width}px`;\r\n  }\r\n\r\n  setTimer(timer) {\r\n    let min = `${timer.min}`;\r\n    let sec = `${timer.sec}`;\r\n    if (min.length === 1) { min = `0${min}`; }\r\n    if (sec.length === 1) { sec = `0${sec}`; }\r\n    this.timer.innerHTML = `${min}:${sec}`;\r\n  }\r\n\r\n  setMoves(moves) {\r\n    this.moves.innerHTML = moves;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://gem-puzzle/./src/js/statbar.js?");

/***/ }),

/***/ "./src/js/storage.js":
/*!***************************!*\
  !*** ./src/js/storage.js ***!
  \***************************/
/*! namespace exports */
/*! export getLocal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setLocal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setLocal\": () => /* binding */ setLocal,\n/* harmony export */   \"getLocal\": () => /* binding */ getLocal\n/* harmony export */ });\nfunction setLocal(name, value) {\r\n  window.localStorage.setItem(name, JSON.stringify(value));\r\n}\r\n\r\nfunction getLocal(name) {\r\n  return JSON.parse(window.localStorage.getItem(name));\r\n}\r\n\n\n//# sourceURL=webpack://gem-puzzle/./src/js/storage.js?");

/***/ }),

/***/ "./src/js/timer.js":
/*!*************************!*\
  !*** ./src/js/timer.js ***!
  \*************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Timer\n/* harmony export */ });\n// import StatusBar from './statbar';\r\nclass Timer {\r\n  constructor(statusBar) {\r\n    this.min = 0;\r\n    this.sec = 0;\r\n    this.statusBar = statusBar;\r\n    console.log(this.statusBar);\r\n  }\r\n\r\n  time() {\r\n    if (this.sec === 59) {\r\n      this.min += 1;\r\n      this.sec = 0;\r\n    } else this.sec += 1;\r\n    if (this.statusBar) {\r\n      this.statusBar.setTimer(this);\r\n    }\r\n  }\r\n\r\n  setTime(min, sec) {\r\n    this.min = min;\r\n    this.sec = sec;\r\n  }\r\n\r\n  getTime() {\r\n    return { min: this.min, sec: this.sec };\r\n  }\r\n\r\n  clear() {\r\n    this.min = 0;\r\n    this.sec = 0;\r\n  }\r\n\r\n  start() {\r\n    console.log('start timer');\r\n    const time = this.time.bind(this);\r\n    this.timer = setInterval(time, 1000);\r\n    // this.timer = setInterval( () => { this.time() }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://gem-puzzle/./src/js/timer.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/js/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;